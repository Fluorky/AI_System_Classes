# -*- coding: utf-8 -*-
"""SAI_lab_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S7yatyYM7fwyg82rX3rBV-bIswNpwf-R
"""

import numpy as np

"""#**Zadanie 1**"""

a = np.array([1,4,3,5,3])
print(a)

#bez inta

b = np.array([3.14,4,2,3])
print(b)

#int32

b = np.array([3.14, 4, 2, 3],dtype=int)
b

c=np.array([[2,4,6],[1,2,3]])
print(c)

d=np.array([[-3.,2.3],[0.1,5.0],[8.0,11.0]])
print(d)

e=np.array([[[2,4],[1,2],[8,9]],[[7,6],[-3,4],[0,8]]])
print(e)

"""#**Zadanie 2**"""

a.ndim,b.ndim,c.ndim,d.ndim,e.ndim

a.shape,b.shape,c.shape,d.shape,e.shape

a.size, b.size,c.size,d.size,e.size

a.dtype,b.dtype,c.dtype,d.dtype,e.dtype

a.itemsize,b.itemsize,c.itemsize,d.itemsize,e.itemsize

a.nbytes,b.nbytes,c.nbytes,d.nbytes,e.nbytes

"""#**Zadanie 3**"""

X1 = np.random.random((3,2,4))

X2 = np.zeros((2,3))

X3 = np.full((6,2,1,2),7)

X4 = np.random.randint(2,20,(5,7))

X5 = np.ones((5,5))

X1

X2

X3

X4

X5

X4[1,2]

X4[2,:]

X5[:,2]

"""#**Zadanie 4**"""

A = np.random.randint(0,10,(4,5))
A

B = A[:,1:3]
B

C = A[1:3,1:5]
C

B =B * 2

B

A

C

B1 = A[:,1:3].copy()
B1

C1 = A[1:3,1:5].copy()
C1

"""#**Zadanie 5**"""

D = np.array(np.arange(0,12))
D

D.shape

D1=D.reshape(6,2)
print(D1)

D2=D.reshape(3,2,2)
print(D2)

D3=D.reshape(6,2,1)
print(D3)

D4=D.reshape(1, 2, 6)
print(D4)

D5=D.reshape(1, 6, 2)
print(D5)

D6=D.reshape(2, 1, 6)
print(D6)

D7=D.reshape(2, 6, 1)
print(D7)

D8=D.reshape(6, 1, 2)
print(D8)

D9=D.reshape(1, 3, 4)
print(D9)

D10=D.reshape(1, 4, 3)
print(D10)

D11=D.reshape(3, 1, 4)
print(D11)

D12=D.reshape(3, 4, 1)
print(D12)

D13=D.reshape(4, 1, 3)
print(D13)

D14=D.reshape(4, 3, 1)
print(D14)

D15=D.reshape(2, 2, 3)
print(D15)

D16=D.reshape(2, 3, 2)
print(D16)

"""#**Zadanie 6**"""

c = np.array([[2,4],[1,2]])
d = np.array([[-3,5],[-7,8]])


print("c=\n",c)
print("d=\n",d)
print("c.shape=",c.shape)
print("d.shape=",d.shape)
print(np.concatenate([c,d],axis=0))
print(np.concatenate([c,d],axis=1))
print(np.concatenate([d,c],axis=0))
print(np.concatenate([d,c],axis=1))

print("c=\n",c)
print("X2=\n",X2)
print("c.shape=",c.shape)
print("X2.shape=",X2.shape)
#print(np.concatenate([c,X2],axis=0)) nie da się
#print(np.concatenate([c,X2],axis=1)) nie da się
#print(np.concatenate([X2,c],axis=0)) nie da się
print(np.concatenate([X2,c],axis=1))

print("X1=\n",X1)
print("X2=\n",X2)
print("X1.shape=",X1.shape)
print("X2.shape=",X2.shape)
#print(np.concatenate([X1,X2],axis=0)) #nie da się bez reshape()ale reshape nie możliwy
#print(np.concatenate([X1,X2],axis=1)) #nie da się bez reshape() ale reshape nie możliwy
#print(np.concatenate([X2,X1],axis=0)) #nie da się bez reshape()ale reshape nie możliwy
#print(np.concatenate([X2,X1],axis=1)) #nie da się bez reshape() ale reshape nie możliwy

print("D11=\n",D11)
print("D13=\n",D13)
print("D11.shape=",D11.shape)
print("D13.shape=",D13.shape)
#print(np.concatenate([D11,D13],axis=0)) nie da się bez reshape()
#print(np.concatenate([D11,D13],axis=1)) nie da się bez reshape()
#print(np.concatenate([D13,D11],axis=0)) nie da się bez reshape()
#print(np.concatenate([D13,D11],axis=1)) nie da się bez reshape()
D13d=D13.reshape(D11.shape)
print(np.concatenate([D11,D13d],axis=0))
print(np.concatenate([D11,D13d],axis=1))
print(np.concatenate([D13d,D11],axis=0))
print(np.concatenate([D13d,D11],axis=1))

"""#**Zadanie 7**

"""

c*d

d+6
d

d*8
d

d-8
d

d/8
d

abs(8)
d

np.exp(d)
d

np.power(d,4)
d

A = np.array([[1],[1]])
A

A = A+X2
A

A = A-X2
A

A = A*X2
A

"""#**Zadadnie 8**"""

c = np.array([[1,1,1],[1,1,1]])
d = np.array([[0,1,2]])

c+d

c= np.array([[0],[1],[2]])
d = np.array([[0,1,2]])
c+d

